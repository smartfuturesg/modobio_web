"""Split out notifications, add push notifications registration.

Revision ID: 157f291f1ac8
Revises: bc573b9813c6
Create Date: 2021-05-07 06:06:12.683183

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '157f291f1ac8'
down_revision = 'bc573b9813c6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Notifications',
    sa.Column('notification_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=256), nullable=True),
    sa.Column('content', sa.String(length=2048), nullable=True),
    sa.Column('action', sa.String(length=512), nullable=True),
    sa.Column('time_to_live', sa.Integer(), nullable=True),
    sa.Column('expires', sa.DateTime(), nullable=True),
    sa.Column('read', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('deleted', sa.Boolean(), server_default='f', nullable=True),
    sa.Column('notification_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['notification_type_id'], ['LookupNotifications.notification_type_id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('notification_id')
    )
    op.create_table('NotificationsPushRegistration',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('device_token', sa.String(length=1024), nullable=True),
    sa.Column('device_id', sa.String(length=1024), nullable=True),
    sa.Column('device_description', sa.String(length=1024), nullable=True),
    sa.Column('channel', sa.String(length=25), nullable=True),
    sa.Column('arn', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.drop_table('UserNotifications')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserNotifications',
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"UserNotifications_idx_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('notification_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('time_to_live', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['notification_type_id'], ['LookupNotifications.notification_type_id'], name='UserNotifications_notification_type_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='UserNotifications_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx', name='UserNotifications_pkey')
    )
    op.drop_table('NotificationsPushRegistration')
    op.drop_table('Notifications')
    # ### end Alembic commands ###
