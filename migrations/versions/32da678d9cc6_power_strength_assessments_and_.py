"""power, strength assessments and checkerboard, heart

Revision ID: 32da678d9cc6
Revises: 6388fde942e3
Create Date: 2020-07-24 17:32:38.596809

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '32da678d9cc6'
down_revision = '6388fde942e3'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chessboard',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('isa_right', sa.Boolean(), nullable=True),
    sa.Column('isa_left', sa.Boolean(), nullable=True),
    sa.Column('isa_structure', sa.String(length=24), nullable=True),
    sa.Column('isa_dynamic', sa.Boolean(), nullable=True),
    sa.Column('left_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('left_hip_slr', sa.Integer(), nullable=True),
    sa.Column('left_hip_er', sa.Integer(), nullable=True),
    sa.Column('left_hip_ir', sa.Integer(), nullable=True),
    sa.Column('left_hip_abd', sa.Integer(), nullable=True),
    sa.Column('left_hip_add', sa.Integer(), nullable=True),
    sa.Column('left_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('left_hip_extension', sa.Integer(), nullable=True),
    sa.Column('right_hip_er', sa.Integer(), nullable=True),
    sa.Column('right_hip_ir', sa.Integer(), nullable=True),
    sa.Column('right_hip_abd', sa.Integer(), nullable=True),
    sa.Column('right_hip_add', sa.Integer(), nullable=True),
    sa.Column('right_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('right_hip_extension', sa.Integer(), nullable=True),
    sa.Column('right_hip_slr', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('heart_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.Column('resting_hr', sa.Integer(), nullable=True),
    sa.Column('max_hr', sa.Integer(), nullable=True),
    sa.Column('theoretical_max_hr', sa.Integer(), nullable=True),
    sa.Column('avg_eval_hr', sa.Integer(), nullable=True),
    sa.Column('avg_training_hr', sa.Integer(), nullable=True),
    sa.Column('estimated_vo2_max', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('lung_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('movement_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.Column('squat_dept', sa.String(), nullable=True),
    sa.Column('squat_ramp', sa.String(), nullable=True),
    sa.Column('squat_eye_test', sa.Boolean(), nullable=True),
    sa.Column('squat_can_breathe', sa.Boolean(), nullable=True),
    sa.Column('squat_can_look_up', sa.Boolean(), nullable=True),
    sa.Column('toe_touch_depth', sa.String(), nullable=True),
    sa.Column('toe_touch_pelvis_movement', sa.String(), nullable=True),
    sa.Column('toe_touch_ribcage_movement', sa.String(), nullable=True),
    sa.Column('toe_touch_notes', sa.String(), nullable=True),
    sa.Column('standing_rotation_r_notes', sa.String(), nullable=True),
    sa.Column('standing_rotation_l_notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('moxy_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('moxy_rip_test',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('power_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.Column('keiser_upper_r_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_watts_per_kg', sa.Float(), nullable=True),
    sa.Column('lower_watts_per_kg', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('strength_assessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('clientid', sa.Integer(), nullable=False),
    sa.Column('upper_push_notes', sa.Text(), nullable=True),
    sa.Column('upper_pull_notes', sa.Text(), nullable=True),
    sa.Column('upper_push_l_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_push_r_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_push_bi_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_l_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_r_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_bi_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_estimated_10rm', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['clientid'], ['ClientInfo.clientid'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('strength_assessment')
    op.drop_table('power_assessment')
    op.drop_table('moxy_rip_test')
    op.drop_table('moxy_assessment')
    op.drop_table('movement_assessment')
    op.drop_table('lung_assessment')
    op.drop_table('heart_assessment')
    op.drop_table('chessboard')
    # ### end Alembic commands ###
