"""Update UserLogin table to add field for
current refresh token.

New table for storing blacklisted API access and refresh tokens.

Revision ID: 6eb08a56735d
Revises: 6d6c668f16ae
Create Date: 2021-01-04 10:47:50.442095

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6eb08a56735d'
down_revision = '6d6c668f16ae'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserTokensBlacklist',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_index(op.f('ix_UserTokensBlacklist_token'), 'UserTokensBlacklist', ['token'], unique=True)
    op.add_column('UserLogin', sa.Column('refresh_token', sa.String(), nullable=True))
    op.drop_index('ix_UserLogin_token', table_name='UserLogin')
    op.create_unique_constraint(None, 'UserLogin', ['refresh_token'])
    op.drop_column('UserLogin', 'token')
    op.drop_column('UserLogin', 'token_expiration')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('UserLogin', sa.Column('token_expiration', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('UserLogin', sa.Column('token', sa.VARCHAR(length=32), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'UserLogin', type_='unique')
    op.create_index('ix_UserLogin_token', 'UserLogin', ['token'], unique=True)
    op.drop_column('UserLogin', 'refresh_token')
    op.drop_index(op.f('ix_UserTokensBlacklist_token'), table_name='UserTokensBlacklist')
    op.drop_table('UserTokensBlacklist')
    # ### end Alembic commands ###
