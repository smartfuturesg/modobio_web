"""
Release 0 database version
all DB upgrades from release 0 are included in this 
migration


Revision ID: 04ea7e0894a4
Revises: 
Create Date: 2020-12-02 17:02:53.893333

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '04ea7e0894a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('MedicalBloodTestResultTypes',
    sa.Column('result_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('result_name', sa.String(), nullable=True),
    sa.Column('normal_min', sa.Float(), nullable=True),
    sa.Column('normal_max', sa.Float(), nullable=True),
    sa.Column('optimal_min', sa.Float(), nullable=True),
    sa.Column('optimal_max', sa.Float(), nullable=True),
    sa.Column('unit', sa.String(), nullable=True),
    sa.Column('panel', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('result_id')
    )
    op.create_table('MedicalConditions',
    sa.Column('medical_condition_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('subcategory', sa.String(), nullable=True),
    sa.Column('condition', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('medical_condition_id')
    )
    op.create_table('MedicalInstitutions',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('institute_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('institute_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('institute_id'),
    sa.UniqueConstraint('institute_name')
    )
    op.create_table('RegisteredFacilities',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('facility_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('facility_name', sa.String(), nullable=False),
    sa.Column('facility_address', sa.String(), nullable=False),
    sa.Column('modobio_facility', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('facility_id'),
    sa.UniqueConstraint('facility_address')
    )
    op.create_table('User',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('modobio_id', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=50), nullable=True),
    sa.Column('phone_number', sa.String(length=50), nullable=True),
    sa.Column('firstname', sa.String(length=50), nullable=True),
    sa.Column('middlename', sa.String(length=50), nullable=True),
    sa.Column('lastname', sa.String(length=50), nullable=True),
    sa.Column('biological_sex_male', sa.Boolean(), nullable=True),
    sa.Column('is_staff', sa.Boolean(), nullable=False),
    sa.Column('is_client', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('ClientConsent',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('infectious_disease', sa.Boolean(), nullable=True),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientConsultContract',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientExternalMR',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('med_record_id', sa.String(), nullable=False),
    sa.Column('institute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['institute_id'], ['MedicalInstitutions.institute_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx'),
    sa.UniqueConstraint('user_id', 'med_record_id', 'institute_id')
    )
    op.create_table('ClientFacilities',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('facility_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['facility_id'], ['RegisteredFacilities.facility_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientIndividualContract',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('doctor', sa.Boolean(), nullable=True),
    sa.Column('pt', sa.Boolean(), nullable=True),
    sa.Column('data', sa.Boolean(), nullable=True),
    sa.Column('drinks', sa.Boolean(), nullable=True),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientInfo',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('membersince', sa.DateTime(), nullable=True),
    sa.Column('guardianname', sa.String(length=100), nullable=True),
    sa.Column('guardianrole', sa.String(length=50), nullable=True),
    sa.Column('street', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state', sa.String(length=2), nullable=True),
    sa.Column('zipcode', sa.String(length=10), nullable=True),
    sa.Column('country', sa.String(length=2), nullable=True),
    sa.Column('preferred', sa.SmallInteger(), nullable=True),
    sa.Column('emergency_contact', sa.String(length=50), nullable=True),
    sa.Column('emergency_phone', sa.String(length=20), nullable=True),
    sa.Column('healthcare_contact', sa.String(length=50), nullable=True),
    sa.Column('healthcare_phone', sa.String(length=20), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('profession', sa.String(length=100), nullable=True),
    sa.Column('receive_docs', sa.Boolean(), nullable=True),
    sa.Column('record_locator_id', sa.String(length=12), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientPolicies',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientRelease',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('release_of_all', sa.Boolean(), nullable=True),
    sa.Column('release_of_other', sa.String(length=1024), nullable=True),
    sa.Column('release_date_from', sa.Date(), nullable=True),
    sa.Column('release_date_to', sa.Date(), nullable=True),
    sa.Column('release_purpose', sa.String(length=1024), nullable=True),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientRemovalRequests',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientSubscriptionContract',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('signdate', sa.Date(), nullable=True),
    sa.Column('signature', sa.Text(), nullable=True),
    sa.Column('revision', sa.String(length=10), nullable=True),
    sa.Column('pdf_path', sa.String(length=200), nullable=True),
    sa.Column('pdf_hash', sa.String(length=40), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalBloodTests',
    sa.Column('test_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('panel_type', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('test_id')
    )
    op.create_table('MedicalFamilyHistory',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('medical_condition_id', sa.Integer(), nullable=False),
    sa.Column('myself', sa.Boolean(), nullable=True),
    sa.Column('father', sa.Boolean(), nullable=True),
    sa.Column('mother', sa.Boolean(), nullable=True),
    sa.Column('sister', sa.Boolean(), nullable=True),
    sa.Column('brother', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['medical_condition_id'], ['MedicalConditions.medical_condition_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalHistory',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('last_examination_date', sa.Date(), nullable=True),
    sa.Column('last_examination_reason', sa.String(length=1024), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('concerns', sa.Text(), nullable=True),
    sa.Column('family_history', sa.Text(), nullable=True),
    sa.Column('social_history', sa.Text(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('medication', sa.Text(), nullable=True),
    sa.Column('diagnostic_xray', sa.String(length=1024), nullable=True),
    sa.Column('diagnostic_ctscan', sa.String(length=1024), nullable=True),
    sa.Column('diagnostic_endoscopy', sa.String(length=1024), nullable=True),
    sa.Column('diagnostic_mri', sa.String(length=1024), nullable=True),
    sa.Column('diagnostic_ultrasound', sa.String(length=1024), nullable=True),
    sa.Column('diagnostic_other', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalImaging',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('image_date', sa.Date(), nullable=True),
    sa.Column('image_type', sa.String(length=1024), nullable=True),
    sa.Column('image_read', sa.Text(), nullable=True),
    sa.Column('image_origin_location', sa.Text(), nullable=True),
    sa.Column('image_path', sa.Text(), nullable=True),
    sa.Column('image_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalPhysicalExam',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('vital_heartrate', sa.Integer(), nullable=True),
    sa.Column('vital_respiratoryrate', sa.Integer(), nullable=True),
    sa.Column('vital_systolic', sa.Integer(), nullable=True),
    sa.Column('vital_diastolic', sa.Integer(), nullable=True),
    sa.Column('vital_temperature', sa.Float(), nullable=True),
    sa.Column('vital_weight', sa.Float(), nullable=True),
    sa.Column('vital_height', sa.String(length=20), nullable=True),
    sa.Column('vital_height_inches', sa.Float(), nullable=True),
    sa.Column('cardiac_rrr', sa.Boolean(), nullable=True),
    sa.Column('cardiac_s1s2', sa.Boolean(), nullable=True),
    sa.Column('cardiac_murmurs', sa.Boolean(), nullable=True),
    sa.Column('cardiac_murmurs_info', sa.String(length=1024), nullable=True),
    sa.Column('cardiac_rubs', sa.Boolean(), nullable=True),
    sa.Column('cardiac_gallops', sa.Boolean(), nullable=True),
    sa.Column('pulmonary_clear', sa.Boolean(), nullable=True),
    sa.Column('pulmonary_wheezing', sa.Boolean(), nullable=True),
    sa.Column('pulmonary_wheezing_info', sa.String(length=1024), nullable=True),
    sa.Column('pulmonary_rales', sa.Boolean(), nullable=True),
    sa.Column('pulmonary_rhonchi', sa.Boolean(), nullable=True),
    sa.Column('abdominal_soft', sa.Boolean(), nullable=True),
    sa.Column('abdominal_hard', sa.Boolean(), nullable=True),
    sa.Column('abdominal_bowel', sa.Boolean(), nullable=True),
    sa.Column('abdominal_hsm', sa.Boolean(), nullable=True),
    sa.Column('abdominal_hsm_info', sa.String(length=1024), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MobilityAssessment',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('isa_left', sa.Integer(), nullable=True),
    sa.Column('isa_right', sa.Integer(), nullable=True),
    sa.Column('isa_dynamic', sa.Boolean(), nullable=True),
    sa.Column('left_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('left_hip_er', sa.Integer(), nullable=True),
    sa.Column('left_hip_ir', sa.Integer(), nullable=True),
    sa.Column('left_hip_abd', sa.Integer(), nullable=True),
    sa.Column('left_hip_add', sa.Integer(), nullable=True),
    sa.Column('left_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('left_hip_extension', sa.Integer(), nullable=True),
    sa.Column('right_hip_er', sa.Integer(), nullable=True),
    sa.Column('right_hip_ir', sa.Integer(), nullable=True),
    sa.Column('right_hip_abd', sa.Integer(), nullable=True),
    sa.Column('right_hip_add', sa.Integer(), nullable=True),
    sa.Column('right_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('right_hip_extension', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('PTChessboard',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('isa_structure', sa.String(length=24), nullable=True),
    sa.Column('isa_movement', sa.String(length=24), nullable=True),
    sa.Column('left_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('left_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_er', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_ir', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_abd', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_add', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_flexion', sa.Integer(), nullable=True),
    sa.Column('right_shoulder_extension', sa.Integer(), nullable=True),
    sa.Column('left_hip_er', sa.Integer(), nullable=True),
    sa.Column('left_hip_ir', sa.Integer(), nullable=True),
    sa.Column('left_hip_abd', sa.Integer(), nullable=True),
    sa.Column('left_hip_add', sa.Integer(), nullable=True),
    sa.Column('left_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('left_hip_extension', sa.Integer(), nullable=True),
    sa.Column('left_hip_slr', sa.Integer(), nullable=True),
    sa.Column('right_hip_er', sa.Integer(), nullable=True),
    sa.Column('right_hip_ir', sa.Integer(), nullable=True),
    sa.Column('right_hip_abd', sa.Integer(), nullable=True),
    sa.Column('right_hip_add', sa.Integer(), nullable=True),
    sa.Column('right_hip_flexion', sa.Integer(), nullable=True),
    sa.Column('right_hip_extension', sa.Integer(), nullable=True),
    sa.Column('right_hip_slr', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('PTHistory',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise', sa.Text(), nullable=True),
    sa.Column('has_pt', sa.Boolean(), nullable=True),
    sa.Column('has_chiro', sa.Boolean(), nullable=True),
    sa.Column('has_massage', sa.Boolean(), nullable=True),
    sa.Column('has_surgery', sa.Boolean(), nullable=True),
    sa.Column('has_medication', sa.Boolean(), nullable=True),
    sa.Column('has_acupuncture', sa.Boolean(), nullable=True),
    sa.Column('pain_areas', sa.Text(), nullable=True),
    sa.Column('best_pain', sa.Integer(), nullable=True),
    sa.Column('worst_pain', sa.Integer(), nullable=True),
    sa.Column('current_pain', sa.Integer(), nullable=True),
    sa.Column('makes_worse', sa.String(length=1024), nullable=True),
    sa.Column('makes_better', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('StaffProfile',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('membersince', sa.DateTime(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('StaffRoles',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerFitnessQuestionnaire',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('physical_goals', sa.ARRAY(sa.String()), server_default="{'other'}", nullable=True),
    sa.Column('current_fitness_level', sa.Integer(), nullable=True),
    sa.Column('goal_fitness_level', sa.Integer(), nullable=True),
    sa.Column('trainer_expectations', sa.ARRAY(sa.String()), server_default="{'other'}", nullable=True),
    sa.Column('lifestyle_goals', sa.ARRAY(sa.String()), server_default="{'other'}", nullable=True),
    sa.Column('sleep_hours', sa.String(), nullable=True),
    sa.Column('sleep_quality_level', sa.Integer(), nullable=True),
    sa.Column('stress_level', sa.Integer(), nullable=True),
    sa.Column('stress_sources', sa.ARRAY(sa.String()), server_default="{'other'}", nullable=True),
    sa.Column('energy_level', sa.Integer(), nullable=True),
    sa.Column('libido_level', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerHeartAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('resting_hr', sa.Integer(), nullable=True),
    sa.Column('max_hr', sa.Integer(), nullable=True),
    sa.Column('theoretical_max_hr', sa.Integer(), nullable=True),
    sa.Column('avg_eval_hr', sa.Integer(), nullable=True),
    sa.Column('avg_training_hr', sa.Integer(), nullable=True),
    sa.Column('estimated_vo2_max', sa.Integer(), nullable=True),
    sa.Column('co2_tolerance', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerLungAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('bag_size', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('breaths_per_minute', sa.Integer(), nullable=True),
    sa.Column('max_minute_volume', sa.Float(), nullable=True),
    sa.Column('liters_min_kg', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerMovementAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('squat_depth', sa.String(), nullable=True),
    sa.Column('squat_ramp', sa.String(), nullable=True),
    sa.Column('squat_eye_test', sa.Boolean(), nullable=True),
    sa.Column('squat_can_breathe', sa.Boolean(), nullable=True),
    sa.Column('squat_can_look_up', sa.Boolean(), nullable=True),
    sa.Column('toe_touch_depth', sa.String(), nullable=True),
    sa.Column('toe_touch_pelvis_movement', sa.ARRAY(sa.String()), server_default="{'Even Bilaterally'}", nullable=True),
    sa.Column('toe_touch_ribcage_movement', sa.ARRAY(sa.String()), server_default="{'Even Bilaterally'}", nullable=True),
    sa.Column('toe_touch_notes', sa.String(), nullable=True),
    sa.Column('standing_rotation_r_notes', sa.String(), nullable=True),
    sa.Column('standing_rotation_l_notes', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerMoxyAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vl_side', sa.String(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('recovery_baseline', sa.Integer(), nullable=True),
    sa.Column('performance_baseline', sa.Integer(), nullable=True),
    sa.Column('gas_tank_size', sa.Integer(), nullable=True),
    sa.Column('starting_sm_o2', sa.Integer(), nullable=True),
    sa.Column('starting_thb', sa.Float(), nullable=True),
    sa.Column('limiter', sa.String(), nullable=True),
    sa.Column('intervention', sa.String(), nullable=True),
    sa.Column('performance_metric_1', sa.String(), nullable=True),
    sa.Column('performance_metric_1_value', sa.Integer(), nullable=True),
    sa.Column('performance_metric_2', sa.String(), nullable=True),
    sa.Column('performance_metric_2_value', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerMoxyRipTest',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('vl_side', sa.String(), nullable=True),
    sa.Column('performance_smo2_1', sa.Integer(), nullable=True),
    sa.Column('performance_thb_1', sa.Float(), nullable=True),
    sa.Column('performance_average_power_1', sa.Integer(), nullable=True),
    sa.Column('performance_hr_max_1', sa.Integer(), nullable=True),
    sa.Column('performance_smo2_2', sa.Integer(), nullable=True),
    sa.Column('performance_thb_2', sa.Float(), nullable=True),
    sa.Column('performance_average_power_2', sa.Integer(), nullable=True),
    sa.Column('performance_hr_max_2', sa.Integer(), nullable=True),
    sa.Column('performance_smo2_3', sa.Integer(), nullable=True),
    sa.Column('performance_thb_3', sa.Float(), nullable=True),
    sa.Column('performance_average_power_3', sa.Integer(), nullable=True),
    sa.Column('performance_hr_max_3', sa.Integer(), nullable=True),
    sa.Column('performance_smo2_4', sa.Integer(), nullable=True),
    sa.Column('performance_thb_4', sa.Float(), nullable=True),
    sa.Column('performance_average_power_4', sa.Integer(), nullable=True),
    sa.Column('performance_hr_max_4', sa.Integer(), nullable=True),
    sa.Column('recovery_smo2_1', sa.Integer(), nullable=True),
    sa.Column('recovery_thb_1', sa.Float(), nullable=True),
    sa.Column('recovery_average_power_1', sa.Integer(), nullable=True),
    sa.Column('recovery_hr_min_1', sa.Integer(), nullable=True),
    sa.Column('recovery_smo2_2', sa.Integer(), nullable=True),
    sa.Column('recovery_thb_2', sa.Float(), nullable=True),
    sa.Column('recovery_average_power_2', sa.Integer(), nullable=True),
    sa.Column('recovery_hr_min_2', sa.Integer(), nullable=True),
    sa.Column('recovery_smo2_3', sa.Integer(), nullable=True),
    sa.Column('recovery_thb_3', sa.Float(), nullable=True),
    sa.Column('recovery_average_power_3', sa.Integer(), nullable=True),
    sa.Column('recovery_hr_min_3', sa.Integer(), nullable=True),
    sa.Column('recovery_smo2_4', sa.Integer(), nullable=True),
    sa.Column('recovery_thb_4', sa.Float(), nullable=True),
    sa.Column('recovery_average_power_4', sa.Integer(), nullable=True),
    sa.Column('recovery_hr_min_4', sa.Integer(), nullable=True),
    sa.Column('smo2_tank_size', sa.Integer(), nullable=True),
    sa.Column('thb_tank_size', sa.Float(), nullable=True),
    sa.Column('performance_baseline_smo2', sa.Integer(), nullable=True),
    sa.Column('performance_baseline_thb', sa.Float(), nullable=True),
    sa.Column('recovery_baseline_smo2', sa.Integer(), nullable=True),
    sa.Column('recovery_baseline_thb', sa.Float(), nullable=True),
    sa.Column('avg_watt_kg', sa.Float(), nullable=True),
    sa.Column('avg_interval_time', sa.Integer(), nullable=True),
    sa.Column('avg_recovery_time', sa.Integer(), nullable=True),
    sa.Column('limiter', sa.String(), nullable=True),
    sa.Column('intervention', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerPowerAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('keiser_upper_r_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_upper_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_weight', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('keiser_lower_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_watts_per_kg', sa.Float(), nullable=True),
    sa.Column('lower_watts_per_kg', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TrainerStrengthAssessment',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('upper_push_notes', sa.Text(), nullable=True),
    sa.Column('upper_pull_notes', sa.Text(), nullable=True),
    sa.Column('upper_push_l_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_l_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_push_r_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_r_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_push_bi_weight', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_push_bi_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_l_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_l_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_r_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_r_estimated_10rm', sa.Float(), nullable=True),
    sa.Column('upper_pull_bi_weight', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_1', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_2', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_attempt_3', sa.Integer(), nullable=True),
    sa.Column('upper_pull_bi_estimated_10rm', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('UserLogin',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('password_created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(length=32), nullable=True),
    sa.Column('token_expiration', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_index(op.f('ix_UserLogin_token'), 'UserLogin', ['token'], unique=True)
    op.create_table('Wearables',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('has_oura', sa.Boolean(), nullable=False),
    sa.Column('registered_oura', sa.Boolean(), nullable=False),
    sa.Column('has_freestyle', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('WearablesFreeStyle',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('timestamps', postgresql.ARRAY(sa.DateTime(), dimensions=1), nullable=True),
    sa.Column('glucose', postgresql.ARRAY(sa.Float(), dimensions=1), nullable=True),
    sa.Column('activation_timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('WearablesOura',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('oauth_state', sa.String(length=50), nullable=True),
    sa.Column('access_token', sa.String(length=50), nullable=True),
    sa.Column('refresh_token', sa.String(length=50), nullable=True),
    sa.Column('token_expires', sa.DateTime(), nullable=True),
    sa.Column('last_scrape', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('staff_recent_clients',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_user_id', sa.Integer(), nullable=False),
    sa.Column('client_user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('ClientReleaseContacts',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('release_contract_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('release_direction', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('relationship', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['release_contract_id'], ['ClientRelease.idx'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalBloodTestResults',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('test_id', sa.Integer(), nullable=False),
    sa.Column('result_id', sa.Integer(), nullable=False),
    sa.Column('result_value', sa.Float(), nullable=True),
    sa.Column('evaluation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['result_id'], ['MedicalBloodTestResultTypes.result_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['test_id'], ['MedicalBloodTests.test_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('MedicalBloodTestResults')
    op.drop_table('ClientReleaseContacts')
    op.drop_table('staff_recent_clients')
    op.drop_table('WearablesOura')
    op.drop_table('WearablesFreeStyle')
    op.drop_table('Wearables')
    op.drop_index(op.f('ix_UserLogin_token'), table_name='UserLogin')
    op.drop_table('UserLogin')
    op.drop_table('TrainerStrengthAssessment')
    op.drop_table('TrainerPowerAssessment')
    op.drop_table('TrainerMoxyRipTest')
    op.drop_table('TrainerMoxyAssessment')
    op.drop_table('TrainerMovementAssessment')
    op.drop_table('TrainerLungAssessment')
    op.drop_table('TrainerHeartAssessment')
    op.drop_table('TrainerFitnessQuestionnaire')
    op.drop_table('StaffRoles')
    op.drop_table('StaffProfile')
    op.drop_table('PTHistory')
    op.drop_table('PTChessboard')
    op.drop_table('MobilityAssessment')
    op.drop_table('MedicalPhysicalExam')
    op.drop_table('MedicalImaging')
    op.drop_table('MedicalHistory')
    op.drop_table('MedicalFamilyHistory')
    op.drop_table('MedicalBloodTests')
    op.drop_table('ClientSubscriptionContract')
    op.drop_table('ClientRemovalRequests')
    op.drop_table('ClientRelease')
    op.drop_table('ClientPolicies')
    op.drop_table('ClientInfo')
    op.drop_table('ClientIndividualContract')
    op.drop_table('ClientFacilities')
    op.drop_table('ClientExternalMR')
    op.drop_table('ClientConsultContract')
    op.drop_table('ClientConsent')
    op.drop_table('User')
    op.drop_table('RegisteredFacilities')
    op.drop_table('MedicalInstitutions')
    op.drop_table('MedicalConditions')
    op.drop_table('MedicalBloodTestResultTypes')
    # ### end Alembic commands ###
