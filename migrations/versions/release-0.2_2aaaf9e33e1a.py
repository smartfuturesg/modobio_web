"""release_2
- Add UserSubscriptions table
- ClientAssignedDrinks table
- Changed staff_user_id to user_id d in StaffRecentClients
- add primary pharmacy to clientinfo
- Creating ClientMobileSettings and UserRemovalRequests tables
- Add LookupRaces table
- Add client goal remove record locator id
- Add client height and weight tables
- Adding deleted flag to user table

Revision ID: d68321bdf39d
Revises: 6eb08a56735d
Create Date: 2021-03-15 16:21:57.732196

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "2aaaf9e33e1a"
down_revision = "6eb08a56735d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "LookupRaces",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("race_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("race_name", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("race_id"),
    )
    op.create_table(
        "ClientHeightHistory",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("height", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientMobileSettings",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("use_24_hour_clock", sa.Boolean(), nullable=True),
        sa.Column("date_format", sa.String(), nullable=True),
        sa.Column("include_timezone", sa.Boolean(), nullable=True),
        sa.Column("biometrics_setup", sa.Boolean(), nullable=True),
        sa.Column("timezone_tracking", sa.Boolean(), nullable=True),
        sa.Column("is_right_handed", sa.Boolean(), nullable=True),
        sa.Column("display_middle_name", sa.Boolean(), nullable=True),
        sa.Column("enable_push_notifications", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientWeightHistory",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("weight", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "UserRemovalRequests",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("requester_user_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["requester_user_id"], ["User.user_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "UserSubscriptions",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("is_staff", sa.Boolean(), nullable=True),
        sa.Column("start_date", sa.DateTime(), nullable=True),
        sa.Column("end_date", sa.DateTime(), nullable=True),
        sa.Column("subscription_rate", sa.Float(), nullable=True),
        sa.Column("subscription_type", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientAssignedDrinks",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("drink_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["drink_id"], ["LookupDrinks.drink_id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.drop_table("ClientRemovalRequests")
    op.add_column("ClientInfo", sa.Column("height", sa.Integer(), nullable=True))
    op.add_column(
        "ClientInfo", sa.Column("primary_goal_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "ClientInfo", sa.Column("primary_pharmacy_address", sa.String(), nullable=True)
    )
    op.add_column(
        "ClientInfo", sa.Column("primary_pharmacy_name", sa.String(), nullable=True)
    )
    op.add_column("ClientInfo", sa.Column("race_id", sa.Integer(), nullable=True))
    op.add_column("ClientInfo", sa.Column("weight", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "ClientInfo", "LookupRaces", ["race_id"], ["race_id"])
    op.create_foreign_key(
        None, "ClientInfo", "LookupGoals", ["primary_goal_id"], ["goal_id"]
    )
    op.drop_column("ClientInfo", "record_locator_id")
    op.add_column(
        "StaffRecentClients", sa.Column("user_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "StaffRecentClients_staff_user_id_fkey",
        "StaffRecentClients",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None, "StaffRecentClients", "User", ["user_id"], ["user_id"], ondelete="CASCADE"
    )
    op.drop_column("StaffRecentClients", "staff_user_id")
    op.add_column("User", sa.Column("deleted", sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("User", "deleted")
    op.add_column(
        "StaffRecentClients",
        sa.Column("staff_user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "StaffRecentClients", type_="foreignkey")
    op.create_foreign_key(
        "StaffRecentClients_staff_user_id_fkey",
        "StaffRecentClients",
        "User",
        ["staff_user_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.drop_column("StaffRecentClients", "user_id")
    op.add_column(
        "ClientInfo",
        sa.Column(
            "record_locator_id",
            sa.VARCHAR(length=12),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.drop_constraint(None, "ClientInfo", type_="foreignkey")
    op.drop_constraint(None, "ClientInfo", type_="foreignkey")
    op.drop_column("ClientInfo", "weight")
    op.drop_column("ClientInfo", "race_id")
    op.drop_column("ClientInfo", "primary_pharmacy_name")
    op.drop_column("ClientInfo", "primary_pharmacy_address")
    op.drop_column("ClientInfo", "primary_goal_id")
    op.drop_column("ClientInfo", "height")
    op.create_table(
        "ClientRemovalRequests",
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"ClientRemovalRequests_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="ClientRemovalRequests_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="ClientRemovalRequests_pkey"),
    )
    op.drop_table("ClientAssignedDrinks")
    op.drop_table("UserSubscriptions")
    op.drop_table("UserRemovalRequests")
    op.drop_table("ClientWeightHistory")
    op.drop_table("ClientMobileSettings")
    op.drop_table("ClientHeightHistory")
    op.drop_table("LookupRaces")
    # ### end Alembic commands ###
