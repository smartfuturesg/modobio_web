"""release_7 patches & release 1.0
- add transcript_object_id to TelehealthChatRooms
- Add duration & medical_gender fields to TelehealthBookings
- Add membersince to User table
- Allow NULL for granter_id on StaffRoles to prevent bootstrapping loop when adding staff users to the database
- Change default to server_default for booleans on User table. Additionally, make User.deleted nullable.
- Allow longer reporter_role & Save video room sid
- remove PaymentFailedTransactions
- practitioner rates, telehealth bookings consult rate
- Update payment tables
- lookup notification severity
- Change height, weight, waist from int to numeric.
- Change tablenames to drop -History postfix.
- Change data in weight column from g to kg.
- Add metric display settings to ClientMobileSettings.
- Update weight, height, waist_size in ClientInfo to Numeric type.
- Change ClientPushNotifications to ClientNotificationSettings.
- Add Cardholder name to PaymentMethods
- drop phone number unique constraint
- Add write access timeout to TelehealthChatRooms
- normalizing UserProfilePictures & StaffRecentClients user_id fields
- operational territories flag

Revision ID: fb14f8b40f12
Revises: 0bebaad7e4a1
Create Date: 2021-12-16 03:35:18.927724

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "fb14f8b40f12"
down_revision = "0bebaad7e4a1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "LookupNotificationSeverity",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("severity", sa.String(), nullable=True),
        sa.Column("color", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientHeight",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "height", sa.Numeric(precision=10, scale=6, asdecimal=False), nullable=True
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientNotificationSettings",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("notification_type_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification_type_id"],
            ["LookupNotifications.notification_type_id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientWaistSize",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "waist_size",
            sa.Numeric(precision=10, scale=6, asdecimal=False),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "ClientWeight",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "weight", sa.Numeric(precision=15, scale=11, asdecimal=False), nullable=True
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.drop_table("PaymentFailedTransactions")
    op.drop_table("ClientWaistSizeHistory")
    op.drop_table("ClientPushNotifications")
    op.drop_table("ClientWeightHistory")
    op.drop_table("ClientHeightHistory")
    op.alter_column(
        "ClientInfo",
        "street",
        existing_type=sa.VARCHAR(length=50),
        type_=sa.String(length=70),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "city",
        existing_type=sa.VARCHAR(length=50),
        type_=sa.String(length=35),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "height",
        existing_type=sa.INTEGER(),
        type_=sa.Numeric(precision=10, scale=6, asdecimal=False),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "weight",
        existing_type=sa.INTEGER(),
        type_=sa.Numeric(precision=15, scale=11, asdecimal=False),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "waist_size",
        existing_type=sa.INTEGER(),
        type_=sa.Numeric(precision=10, scale=6, asdecimal=False),
        existing_nullable=True,
    )
    op.add_column(
        "ClientMobileSettings",
        sa.Column("display_metric_height", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "ClientMobileSettings",
        sa.Column("display_metric_weight", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "ClientMobileSettings",
        sa.Column("display_metric_waist_size", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "LookupCurrencies",
        sa.Column(
            "min_rate",
            sa.Numeric(precision=10, scale=2, asdecimal=False),
            nullable=True,
        ),
    )
    op.add_column(
        "LookupCurrencies",
        sa.Column(
            "max_rate",
            sa.Numeric(precision=10, scale=2, asdecimal=False),
            nullable=True,
        ),
    )
    op.add_column(
        "LookupCurrencies", sa.Column("increment", sa.Integer(), nullable=True)
    )
    op.add_column(
        "LookupTerritoriesOfOperations",
        sa.Column("active", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "PaymentHistory", sa.Column("booking_id", sa.Integer(), nullable=True)
    )
    op.add_column("PaymentHistory", sa.Column("voided", sa.Boolean(), nullable=True))
    op.add_column(
        "PaymentHistory", sa.Column("void_reason", sa.String(), nullable=True)
    )
    op.add_column("PaymentHistory", sa.Column("void_id", sa.String(), nullable=True))
    op.create_foreign_key(
        None, "PaymentHistory", "TelehealthBookings", ["booking_id"], ["idx"]
    )
    op.add_column(
        "PaymentMethods", sa.Column("cardholder_name", sa.String(), nullable=True)
    )
    op.add_column(
        "PaymentRefunds", sa.Column("refund_transaction_id", sa.String(), nullable=True)
    )
    op.add_column(
        "StaffRecentClients", sa.Column("staff_user_id", sa.Integer(), nullable=False)
    )
    op.drop_constraint(
        "StaffRecentClients_user_id_fkey", "StaffRecentClients", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "StaffRecentClients",
        "User",
        ["staff_user_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.drop_column("StaffRecentClients", "user_id")
    op.add_column(
        "StaffRoles",
        sa.Column("consult_rate", sa.Numeric(precision=10, scale=2), nullable=True),
    )
    op.alter_column(
        "StaffRoles", "granter_id", existing_type=sa.INTEGER(), nullable=True
    )
    op.alter_column(
        "TelehealthBookingStatus",
        "reporter_role",
        existing_type=sa.VARCHAR(length=20),
        type_=sa.String(length=30),
        existing_nullable=True,
    )
    op.add_column(
        "TelehealthBookings", sa.Column("charged", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "TelehealthBookings",
        sa.Column("medical_gender_preference", sa.String(), nullable=True),
    )
    op.add_column(
        "TelehealthBookings",
        sa.Column("consult_rate", sa.Numeric(precision=10, scale=2), nullable=True),
    )
    op.drop_column("TelehealthBookings", "is_paid")
    op.add_column(
        "TelehealthChatRooms",
        sa.Column("transcript_object_id", sa.String(), nullable=True),
    )
    op.add_column(
        "TelehealthChatRooms",
        sa.Column("write_access_timeout", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "TelehealthMeetingRooms", sa.Column("sid", sa.String(), nullable=True)
    )

    op.add_column("User", sa.Column("membersince", sa.DateTime(), nullable=True))
    op.alter_column("User", "deleted", existing_type=sa.BOOLEAN(), nullable=False)

    op.alter_column(
        "User", "is_staff", existing_type=sa.BOOLEAN, server_default="false"
    )
    op.alter_column(
        "User", "is_client", existing_type=sa.BOOLEAN, server_default="false"
    )
    op.alter_column(
        "User",
        "deleted",
        existing_type=sa.BOOLEAN,
        server_default="false",
        nullable=False,
    )
    op.alter_column(
        "User", "is_internal", existing_type=sa.BOOLEAN, server_default="false"
    )
    op.alter_column(
        "User", "email_verified", existing_type=sa.BOOLEAN, server_default="false"
    )
    op.alter_column(
        "User", "biological_sex_male", existing_type=sa.BOOLEAN, server_default="false"
    )

    op.drop_constraint("User_phone_number_key", "User", type_="unique")
    op.add_column(
        "UserProfilePictures", sa.Column("client_user_id", sa.Integer(), nullable=True)
    )
    op.add_column(
        "UserProfilePictures", sa.Column("staff_user_id", sa.Integer(), nullable=True)
    )
    op.drop_constraint(
        "UserProfilePictures_staff_id_fkey", "UserProfilePictures", type_="foreignkey"
    )
    op.drop_constraint(
        "UserProfilePictures_client_id_fkey", "UserProfilePictures", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "UserProfilePictures",
        "ClientInfo",
        ["client_user_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        None,
        "UserProfilePictures",
        "StaffProfile",
        ["staff_user_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.drop_column("UserProfilePictures", "client_id")
    op.drop_column("UserProfilePictures", "staff_id")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "UserProfilePictures",
        sa.Column("staff_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "UserProfilePictures",
        sa.Column("client_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.drop_constraint(None, "UserProfilePictures", type_="foreignkey")
    op.drop_constraint(None, "UserProfilePictures", type_="foreignkey")
    op.create_foreign_key(
        "UserProfilePictures_client_id_fkey",
        "UserProfilePictures",
        "ClientInfo",
        ["client_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        "UserProfilePictures_staff_id_fkey",
        "UserProfilePictures",
        "StaffProfile",
        ["staff_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.drop_column("UserProfilePictures", "staff_user_id")
    op.drop_column("UserProfilePictures", "client_user_id")
    op.create_unique_constraint("User_phone_number_key", "User", ["phone_number"])
    op.alter_column("User", "deleted", existing_type=sa.BOOLEAN(), nullable=True)
    op.drop_column("User", "membersince")
    op.drop_column("TelehealthMeetingRooms", "sid")
    op.drop_column("TelehealthChatRooms", "write_access_timeout")
    op.drop_column("TelehealthChatRooms", "transcript_object_id")
    op.add_column(
        "TelehealthBookings",
        sa.Column("is_paid", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.drop_column("TelehealthBookings", "consult_rate")
    op.drop_column("TelehealthBookings", "medical_gender_preference")
    op.drop_column("TelehealthBookings", "charged")
    op.alter_column(
        "TelehealthBookingStatus",
        "reporter_role",
        existing_type=sa.String(length=30),
        type_=sa.VARCHAR(length=20),
        existing_nullable=True,
    )
    op.alter_column(
        "StaffRoles", "granter_id", existing_type=sa.INTEGER(), nullable=False
    )
    op.drop_column("StaffRoles", "consult_rate")
    op.add_column(
        "StaffRecentClients",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(None, "StaffRecentClients", type_="foreignkey")
    op.create_foreign_key(
        "StaffRecentClients_user_id_fkey",
        "StaffRecentClients",
        "User",
        ["user_id"],
        ["user_id"],
        ondelete="CASCADE",
    )
    op.drop_column("StaffRecentClients", "staff_user_id")
    op.drop_column("PaymentRefunds", "refund_transaction_id")
    op.drop_column("PaymentMethods", "cardholder_name")
    op.drop_constraint(None, "PaymentHistory", type_="foreignkey")
    op.drop_column("PaymentHistory", "void_id")
    op.drop_column("PaymentHistory", "void_reason")
    op.drop_column("PaymentHistory", "voided")
    op.drop_column("PaymentHistory", "booking_id")
    op.drop_column("LookupTerritoriesOfOperations", "active")
    op.drop_column("LookupCurrencies", "increment")
    op.drop_column("LookupCurrencies", "max_rate")
    op.drop_column("LookupCurrencies", "min_rate")
    op.drop_column("ClientMobileSettings", "display_metric_waist_size")
    op.drop_column("ClientMobileSettings", "display_metric_weight")
    op.drop_column("ClientMobileSettings", "display_metric_height")
    op.alter_column(
        "ClientInfo",
        "waist_size",
        existing_type=sa.Numeric(precision=10, scale=6, asdecimal=False),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "weight",
        existing_type=sa.Numeric(precision=15, scale=11, asdecimal=False),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "height",
        existing_type=sa.Numeric(precision=10, scale=6, asdecimal=False),
        type_=sa.INTEGER(),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "city",
        existing_type=sa.String(length=35),
        type_=sa.VARCHAR(length=50),
        existing_nullable=True,
    )
    op.alter_column(
        "ClientInfo",
        "street",
        existing_type=sa.String(length=70),
        type_=sa.VARCHAR(length=50),
        existing_nullable=True,
    )
    op.create_table(
        "ClientHeightHistory",
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"ClientHeightHistory_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("height", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="ClientHeightHistory_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="ClientHeightHistory_pkey"),
    )
    op.create_table(
        "ClientWeightHistory",
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"ClientWeightHistory_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("weight", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="ClientWeightHistory_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="ClientWeightHistory_pkey"),
    )
    op.create_table(
        "ClientPushNotifications",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"ClientPushNotifications_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "notification_type_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["notification_type_id"],
            ["LookupNotifications.notification_type_id"],
            name="ClientPushNotifications_notification_type_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="ClientPushNotifications_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="ClientPushNotifications_pkey"),
    )
    op.create_table(
        "ClientWaistSizeHistory",
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"ClientWaistSizeHistory_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("waist_size", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="ClientWaistSizeHistory_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="ClientWaistSizeHistory_pkey"),
    )
    op.create_table(
        "PaymentFailedTransactions",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("clock_timestamp()"),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "idx",
            sa.INTEGER(),
            server_default=sa.text(
                "nextval('\"PaymentFailedTransactions_idx_seq\"'::regclass)"
            ),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("transaction_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["User.user_id"],
            name="PaymentFailedTransactions_user_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("idx", name="PaymentFailedTransactions_pkey"),
    )
    op.drop_table("ClientWeight")
    op.drop_table("ClientWaistSize")
    op.drop_table("ClientNotificationSettings")
    op.drop_table("ClientHeight")
    op.drop_table("LookupNotificationSeverity")
    # ### end Alembic commands ###
