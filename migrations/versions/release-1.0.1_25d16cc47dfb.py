"""release-1.0.1

Revision ID: 25d16cc47dfb
Revises: fb14f8b40f12
Create Date: 2022-02-17 15:17:45.243896

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "25d16cc47dfb"
down_revision = "fb14f8b40f12"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "LookupBloodTests",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("modobio_test_code", sa.String(), nullable=False),
        sa.Column("display_name", sa.String(), nullable=True),
        sa.Column("quest_test_code", sa.String(), nullable=True),
        sa.Column("cpt_test_code", sa.String(), nullable=True),
        sa.Column("panel_display_name", sa.String(), nullable=True),
        sa.Column("tags", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("modobio_test_code"),
    )
    op.create_table(
        "ClientFertility",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("pregnant", sa.Boolean(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "LookupBloodTestRanges",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("modobio_test_code", sa.String(), nullable=True),
        sa.Column("biological_sex_male", sa.Boolean(), nullable=True),
        sa.Column("menstrual_cycle", sa.String(), nullable=True),
        sa.Column("age_min", sa.Integer(), nullable=True),
        sa.Column("age_max", sa.Integer(), nullable=True),
        sa.Column("race_id", sa.Integer(), nullable=True),
        sa.Column("units", sa.String(), nullable=True),
        sa.Column("ratio", sa.String(), nullable=True),
        sa.Column("critical_min", sa.Float(), nullable=True),
        sa.Column("ref_min", sa.Float(), nullable=True),
        sa.Column("ref_max", sa.Float(), nullable=True),
        sa.Column("critical_max", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["modobio_test_code"],
            ["LookupBloodTests.modobio_test_code"],
        ),
        sa.ForeignKeyConstraint(
            ["race_id"],
            ["LookupRaces.race_id"],
        ),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.add_column(
        "LookupSubscriptions", sa.Column("ios_product_id", sa.String(), nullable=True)
    )
    op.add_column(
        "MedicalBloodTestResults",
        sa.Column("modobio_test_code", sa.String(), nullable=True),
    )
    op.add_column(
        "MedicalBloodTestResults", sa.Column("age", sa.Integer(), nullable=True)
    )
    op.add_column(
        "MedicalBloodTestResults", sa.Column("race", sa.String(), nullable=True)
    )
    op.add_column(
        "MedicalBloodTestResults",
        sa.Column("menstrual_cycle", sa.String(), nullable=True),
    )
    op.add_column(
        "MedicalBloodTestResults",
        sa.Column("biological_sex_male", sa.Boolean(), nullable=True),
    )
    op.alter_column(
        "MedicalBloodTestResults",
        "result_id",
        existing_type=sa.INTEGER(),
        nullable=True,
    )
    op.drop_constraint(
        "MedicalBloodTestResults_result_id_fkey",
        "MedicalBloodTestResults",
        type_="foreignkey",
    )
    op.create_foreign_key(
        None,
        "MedicalBloodTestResults",
        "LookupBloodTests",
        ["modobio_test_code"],
        ["modobio_test_code"],
    )
    op.create_foreign_key(
        None,
        "MedicalBloodTestResults",
        "MedicalBloodTestResultTypes",
        ["result_id"],
        ["result_id"],
        ondelete="SET NULL",
    )
    op.drop_constraint(
        "PaymentHistory_booking_id_fkey", "PaymentHistory", type_="foreignkey"
    )
    op.create_foreign_key(
        None,
        "PaymentHistory",
        "TelehealthBookings",
        ["booking_id"],
        ["idx"],
        ondelete="SET NULL",
    )
    op.add_column(
        "UserLogin", sa.Column("staff_account_closed", sa.DateTime(), nullable=True)
    )
    op.add_column(
        "UserLogin",
        sa.Column(
            "staff_account_blocked", sa.Boolean(), server_default="f", nullable=True
        ),
    )
    op.add_column(
        "UserLogin",
        sa.Column("staff_account_blocked_reason", sa.String(length=500), nullable=True),
    )
    op.add_column(
        "UserLogin", sa.Column("client_account_closed", sa.DateTime(), nullable=True)
    )
    op.add_column(
        "UserLogin",
        sa.Column(
            "client_account_blocked", sa.Boolean(), server_default="f", nullable=True
        ),
    )
    op.add_column(
        "UserLogin",
        sa.Column(
            "client_account_blocked_reason", sa.String(length=500), nullable=True
        ),
    )
    op.add_column(
        "UserRemovalRequests", sa.Column("removal_type", sa.String(), nullable=True)
    )
    op.add_column(
        "UserSubscriptions",
        sa.Column("last_checked_date", sa.DateTime(), nullable=True),
    )
    op.add_column(
        "UserSubscriptions",
        sa.Column("apple_original_transaction_id", sa.String(), nullable=True),
    )
    op.add_column("User", sa.Column("was_staff", sa.Boolean(), default=False))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("UserSubscriptions", "apple_original_transaction_id")
    op.drop_column("UserSubscriptions", "last_checked_date")
    op.drop_column("UserRemovalRequests", "removal_type")
    op.drop_column("UserLogin", "client_account_blocked_reason")
    op.drop_column("UserLogin", "client_account_blocked")
    op.drop_column("UserLogin", "client_account_closed")
    op.drop_column("UserLogin", "staff_account_blocked_reason")
    op.drop_column("UserLogin", "staff_account_blocked")
    op.drop_column("UserLogin", "staff_account_closed")
    op.drop_constraint(None, "PaymentHistory", type_="foreignkey")
    op.create_foreign_key(
        "PaymentHistory_booking_id_fkey",
        "PaymentHistory",
        "TelehealthBookings",
        ["booking_id"],
        ["idx"],
    )
    op.drop_constraint(None, "MedicalBloodTestResults", type_="foreignkey")
    op.drop_constraint(None, "MedicalBloodTestResults", type_="foreignkey")
    op.create_foreign_key(
        "MedicalBloodTestResults_result_id_fkey",
        "MedicalBloodTestResults",
        "MedicalBloodTestResultTypes",
        ["result_id"],
        ["result_id"],
        ondelete="CASCADE",
    )
    op.alter_column(
        "MedicalBloodTestResults",
        "result_id",
        existing_type=sa.INTEGER(),
        nullable=False,
    )
    op.drop_column("MedicalBloodTestResults", "biological_sex_male")
    op.drop_column("MedicalBloodTestResults", "menstrual_cycle")
    op.drop_column("MedicalBloodTestResults", "race")
    op.drop_column("MedicalBloodTestResults", "age")
    op.drop_column("MedicalBloodTestResults", "modobio_test_code")
    op.drop_column("LookupSubscriptions", "ios_product_id")
    op.drop_table("LookupBloodTestRanges")
    op.drop_table("ClientFertility")
    op.drop_table("LookupBloodTests")
    op.drop_column("User", "was_staff")
    # ### end Alembic commands ###
