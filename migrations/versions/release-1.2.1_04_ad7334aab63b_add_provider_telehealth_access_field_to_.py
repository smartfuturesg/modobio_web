"""Add provider_telehealth_access field to TelehealthSettings table

Revision ID: ad7334aab63b
Revises: 09bd96cf3eb5
Create Date: 2022-11-02 10:07:32.995389

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ad7334aab63b'
down_revision = '09bd96cf3eb5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('PaymentStatus')
    op.drop_column('PaymentHistory', 'void_id')
    op.drop_column('PaymentHistory', 'authorization_number')
    op.drop_column('PaymentHistory', 'transaction_id')
    op.drop_column('PaymentMethods', 'payment_id')
    op.drop_column('PaymentRefunds', 'refund_transaction_id')
    op.add_column('TelehealthStaffSettings', sa.Column('provider_telehealth_access', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('TelehealthStaffSettings', 'provider_telehealth_access')
    op.add_column('PaymentRefunds', sa.Column('refund_transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('PaymentMethods', sa.Column('payment_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('PaymentHistory', sa.Column('transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('PaymentHistory', sa.Column('authorization_number', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('PaymentHistory', sa.Column('void_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_table('PaymentStatus',
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"PaymentStatus_idx_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('card_present_status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('current_transaction_status_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('original_transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('original_transaction_status_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('request_amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('save_on_file_transaction_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('transaction_action', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name='PaymentStatus_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx', name='PaymentStatus_pkey')
    )
    # ### end Alembic commands ###
