variables:
  GIT_DEPTH: 0

stages:
  - test
  - pages
  - deploy

test:
  stage: test
  tags:
    - shared
  only:
    - merge_requests
  script:
    - echo "Creating test database and elasticsearch instance..."
    - sudo docker run --name postgres_$CI_BUILD_ID --network modobio -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=modobio_test -d postgres
    - sudo docker run --name elasticsearch_$CI_BUILD_ID --network modobio -v esdata01:/usr/share/elasticsearch/data -e "discovery.type=single-node" --rm -d docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    - echo "Running tests..."
    - sudo docker build -f Dockerfile -t odyssey_test_$CI_BUILD_ID .
    - sudo docker run --name odyssey_test_$CI_BUILD_ID --network modobio -e FLASK_ENV=development -e FLASK_DEV=remote -e DB_USER=postgres -e DB_PASS=password -e DB_HOST=postgres_$CI_BUILD_ID -e DB_NAME=modobio_test -e ELASTICSEARCH_URL=http://elasticsearch_$CI_BUILD_ID:9200 -e TWILIO_ACCOUNT_SID=$TWILIO_ACCOUNT_SID -e TWILIO_API_KEY_SID=$TWILIO_API_KEY_SID -e TWILIO_API_KEY_SECRET=$TWILIO_API_KEY_SECRET -e PYTHONPATH=/usr/src/app/src --rm odyssey_test_$CI_BUILD_ID pytest --cov=odyssey tests/
    - if [[ $(sudo docker run --name odyssey_test_$CI_BUILD_ID --network modobio -e FLASK_APP=odyssey:create_app -e FLASK_ENV=development -e FLASK_DEV=remote -e DB_USER=postgres -e DB_PASS=password -e DB_HOST=postgres_$CI_BUILD_ID -e DB_NAME=modobio_test -e S3_BUCKET_NAME=$S3_BUCKET_NAME -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION -e PYTHONPATH=/usr/src/app/src --rm odyssey_test_$CI_BUILD_ID flask db heads | wc -l) != 1 ]]; then echo "revision heads failed" && exit 1; else echo "passed"; fi
  after_script:
    - echo "Destroying test database and elasticsearch instance..."
    - sudo docker rm -f postgres_$CI_BUILD_ID
    - sudo docker rm -f elasticsearch_$CI_BUILD_ID

pages:
  stage: pages
  tags:
    - gitlab-runner
  only:
    - master
    - next-release
    - /release-[0-9]+/
  script:
    - echo 'Nothing to do...'
    #-
  artifacts:
    paths:
      - public

deploy:
  stage: deploy
  tags:
    - shared
  only:
    - master
    - next-release
    - /release-[0-9]+/
  script:
    - echo "Updating version."
    - bash /home/gitlab-runner/update_version.sh zan/odyssey $CI_COMMIT_BRANCH
    - echo "Deploying update."
    - bash /home/gitlab-runner/dev_update.sh $CI_PROJECT_NAME $CI_COMMIT_BRANCH