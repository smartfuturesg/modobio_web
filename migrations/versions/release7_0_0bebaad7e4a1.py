"""release_7
- Add ClientWaistSizeHistory
- Add waist_size field to ClientInfo
- Update TelehealthBookingDetails
- Add profile_picture field to StaffProfile
- Add LookupRoles
- Drop LookupProfessionColors
- Add ClientRaceAndEthnicity
- Add is_temporary field to ClientClinicalCareTeam
- Add LookupMacroGoals
- Add VoIP fields to NotificationsPushRegistration
- Add reporter_id field to MedicalBloodPressures
- Add LookupLegalDocs
- Add UserLegalDocs
- Add status field to ClientClinicalCareTeamAuthorizations
- Edit ClientInfo & StaffPRofile primary key
- Add UserProfilePictures
- Add LookupMedicalSymptoms
- Add timezone fields to TelehealthBookings & TelehealthStaffAvailability
- Add LookupOrganizations
- Add LookupCurrencies
- Edit SystemTelehealthSessionCosts
- Add TelehealthStaffSettings
- Connect TelehealthStaffSettings to TelehealthStaffAvailability
- Add ClientEHRPageAuthorizations
- Add PaymentMethods
- Add PaymentStatus
- Add PractitionerOrganizationAffiliation
- Add reporter_id field
- Drop team_member_email from ClientClinicalCareTeam
- Add unique constraint to ClientClinicalCareTeam
- Add resource_group & access_group fields to LookupClinicalCareTeamResources
- Add PaymentHistory & PaymentRefunds
- Add StaffOffices
- Edit LookupTerritoriesofOperation
- Drop LookupTerritoriesofOperation
- Add LookupTerritoriesOfOperations
- Add granter_id field to StaffRoles & remove verified
- Add password_reset flag to UserLogin
- Add PractitionerCredentials
- Add TelehealthBookingStatus
- Add affiliation_user_id to PractitionerOrganizationAffiliation
- Add UserResetPasswordRequestHistory
- Add PaymentFailedTransaction
- Add dob to User & drop dob from ClientInfo
- Add external_blooking_id field to TelehealthBookings
- Add DoseSpotProxyID
- Add DoseSpotPatientID
- Add DoseSpotPractitionerID

Revision ID: 0bebaad7e4a1
Revises: f56c6155f65c
Create Date: 2021-04-09 08:59:41.025324

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0bebaad7e4a1'
down_revision = 'f56c6155f65c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ClientWaistSizeHistory',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('waist_size', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('ClientInfo', sa.Column('waist_size', sa.Integer(), nullable=True))
    op.create_unique_constraint(None, 'TelehealthBookingDetails', ['booking_id'])
    op.drop_column('TelehealthBookingDetails', 'media')
    op.add_column('StaffProfile', sa.Column('profile_picture', sa.String(), nullable=True))
    op.create_table('LookupRoles',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('role_name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('alt_role_name', sa.String(), nullable=True),
    sa.Column('is_practitioner', sa.Boolean(), nullable=True),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('icon', sa.String(), nullable=True),
    sa.Column('has_client_data_access', sa.Boolean(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.drop_table('LookupProfessionColors')
    op.create_table('ClientRaceAndEthnicity',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_client_mother', sa.Boolean(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['race_id'], ['LookupRaces.race_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.drop_constraint('ClientInfo_race_id_fkey', 'ClientInfo', type_='foreignkey')
    op.drop_column('ClientInfo', 'race_id')
    op.add_column('ClientClinicalCareTeam', sa.Column('is_temporary', sa.Boolean(), nullable=True))
    op.create_table('LookupMacroGoals',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('goal_id', sa.Integer(), autoincrement=True, nullable=True),
    sa.Column('goal', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('goal_id')
    )
    op.add_column('ClientInfo', sa.Column('primary_macro_goal_id', sa.Integer(), nullable=True))
    op.add_column('ClientInfo', sa.Column('primary_goal_description', sa.String(length=300), nullable=True))
    op.create_foreign_key(None, 'ClientInfo', 'LookupMacroGoals', ['primary_macro_goal_id'], ['goal_id'])
    op.add_column('NotificationsPushRegistration', sa.Column('device_voip_token', sa.String(length=1024), nullable=True))
    op.add_column('NotificationsPushRegistration', sa.Column('voip_arn', sa.String(length=256), nullable=True))
    op.add_column('MedicalBloodPressures', sa.Column('reporter_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'MedicalBloodPressures', 'User', ['reporter_id'], ['user_id'])
    op.create_table('LookupLegalDocs',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('target', sa.String(), nullable=True),
    sa.Column('path', sa.String(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('UserLegalDocs',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('doc_id', sa.Integer(), nullable=True),
    sa.Column('signed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['doc_id'], ['LookupLegalDocs.idx'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('ClientClinicalCareTeamAuthorizations', sa.Column('status', sa.String(), nullable=True))
    op.drop_column('ClientInfo', 'idx')
    op.alter_column('ClientInfo', 'user_id')
    op.create_primary_key('pk_ClientInfo', 'ClientInfo', ['user_id'])
    op.drop_column('StaffProfile', 'idx')
    op.drop_column('StaffProfile', 'profile_picture')
    op.create_primary_key('pk_StaffProfile', 'StaffProfile', ['user_id'])
    op.create_table('UserProfilePictures',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('staff_id', sa.Integer(), nullable=True),
    sa.Column('image_path', sa.String(), nullable=False),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('original', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['ClientInfo.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['staff_id'], ['StaffProfile.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('LookupMedicalSymptoms',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('TelehealthBookings', sa.Column('client_timezone', sa.String(), nullable=True))
    op.add_column('TelehealthBookings', sa.Column('staff_timezone', sa.String(), nullable=True))
    op.add_column('TelehealthBookings', sa.Column('target_date_utc', sa.Date(), nullable=True))
    op.add_column('TelehealthBookings', sa.Column('booking_window_id_start_time_utc', sa.Integer(), nullable=False))
    op.add_column('TelehealthBookings', sa.Column('booking_window_id_end_time_utc', sa.Integer(), nullable=False))
    op.create_foreign_key('lookup_booking_time_inc_utc_end_fk', 'TelehealthBookings', 'LookupBookingTimeIncrements', ['booking_window_id_end_time_utc'], ['idx'], ondelete='CASCADE')
    op.create_foreign_key('lookup_booking_time_inc_utc_start_fk', 'TelehealthBookings', 'LookupBookingTimeIncrements', ['booking_window_id_start_time_utc'], ['idx'], ondelete='CASCADE')
    op.create_table('LookupOrganizations',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('org_name', sa.String(), nullable=True),
    sa.Column('org_id', sa.String(), nullable=True),
    sa.Column('org_token', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('LookupCurrencies',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country', sa.String(), nullable=False),
    sa.Column('symbol_and_code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('SystemTelehealthSessionCosts', sa.Column('currency_id', sa.Integer(), nullable=False))
    op.drop_constraint('telehealth_costs_unique_resource_country_profession', 'SystemTelehealthSessionCosts', type_='unique')
    op.create_unique_constraint('telehealth_costs_unique_resource_currency_id_profession', 'SystemTelehealthSessionCosts', ['currency_id', 'profession_type'])
    op.create_foreign_key(None, 'SystemTelehealthSessionCosts', 'LookupCurrencies', ['currency_id'], ['idx'])
    op.drop_column('SystemTelehealthSessionCosts', 'country')
    op.create_table('TelehealthStaffSettings',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('auto_confirm', sa.Boolean(), server_default='t', nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.drop_constraint('TelehealthStaffAvailability_user_id_fkey', 'TelehealthStaffAvailability', type_='foreignkey')
    op.create_foreign_key(None, 'TelehealthStaffAvailability', 'TelehealthStaffSettings', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_table('PaymentMethods',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('payment_id', sa.String(), nullable=True),
    sa.Column('payment_type', sa.String(), nullable=True),
    sa.Column('number', sa.Integer(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('TelehealthBookings', sa.Column('client_location_id', sa.Integer(), nullable=False))
    op.add_column('TelehealthBookings', sa.Column('payment_method_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'TelehealthBookings', 'PaymentMethods', ['payment_method_id'], ['idx'])
    op.create_foreign_key(None, 'TelehealthBookings', 'LookupTerritoriesofOperation', ['client_location_id'], ['idx'])
    op.add_column('TelehealthQueueClientPool', sa.Column('location_id', sa.Integer(), nullable=False))
    op.add_column('TelehealthQueueClientPool', sa.Column('payment_method_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'TelehealthQueueClientPool', 'PaymentMethods', ['payment_method_id'], ['idx'])
    op.create_foreign_key(None, 'TelehealthQueueClientPool', 'LookupTerritoriesofOperation', ['location_id'], ['idx'])
    op.create_table('PaymentStatus',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('card_present_status', sa.String(), nullable=True),
    sa.Column('current_transaction_status_code', sa.String(), nullable=True),
    sa.Column('original_transaction_id', sa.String(), nullable=True),
    sa.Column('original_transaction_status_code', sa.String(), nullable=True),
    sa.Column('payment_transaction_id', sa.String(), nullable=True),
    sa.Column('request_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('save_on_file_transaction_id', sa.String(), nullable=True),
    sa.Column('transaction_action', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_unique_constraint(None, 'LookupRoles', ['role_name'])
    op.create_foreign_key(None, 'StaffRoles', 'LookupRoles', ['role'], ['role_name'])
    op.create_table('PractitionerOrganizationAffiliation',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organization_idx', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_idx'], ['LookupOrganizations.idx'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_foreign_key(None, 'MedicalBloodTests', 'User', ['reporter_id'], ['user_id'])
    op.add_column('MedicalConditions', sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.add_column('MedicalConditions', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.add_column('MedicalGeneralInfoMedications', sa.Column('reporter_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'MedicalGeneralInfoMedications', 'User', ['reporter_id'], ['user_id'])
    op.create_foreign_key(None, 'MedicalImaging', 'User', ['reporter_id'], ['user_id'])
    op.add_column('MedicalLookUpBloodPressureRange', sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.add_column('MedicalLookUpBloodPressureRange', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.add_column('MedicalLookUpSTD', sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.add_column('MedicalLookUpSTD', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True))
    op.create_foreign_key(None, 'MedicalPhysicalExam', 'User', ['reporter_id'], ['user_id'])
    op.add_column('MedicalSurgeries', sa.Column('reporter_id', sa.Integer(), nullable=False))
    op.drop_constraint('MedicalSurgeries_reporter_user_id_fkey', 'MedicalSurgeries', type_='foreignkey')
    op.create_foreign_key(None, 'MedicalSurgeries', 'User', ['reporter_id'], ['user_id'])
    op.drop_column('MedicalSurgeries', 'reporter_user_id')
    op.drop_column('ClientClinicalCareTeam', 'team_member_email')
    op.create_unique_constraint(None, 'ClientClinicalCareTeam', ['user_id', 'team_member_user_id'])
    op.add_column('LookupClinicalCareTeamResources', sa.Column('resource_group', sa.String(), nullable=True))
    op.add_column('LookupClinicalCareTeamResources', sa.Column('access_group', sa.String(), nullable=True))
    op.create_table('PaymentHistory',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('payment_method_id', sa.Integer(), nullable=True),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('transaction_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['payment_method_id'], ['PaymentMethods.idx'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('PaymentRefunds',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=True),
    sa.Column('refund_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('refund_reason', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('char_length(refund_reason) > 20', name='refund_reason_min_length'),
    sa.ForeignKeyConstraint(['payment_id'], ['PaymentHistory.idx'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['User.user_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('LookupTerritoriesOfOperations',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('sub_territory', sa.String(), nullable=True),
    sa.Column('sub_territory_abbreviation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('StaffOffices',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('street', sa.String(), nullable=True),
    sa.Column('city', sa.String(length=35), nullable=True),
    sa.Column('state', sa.String(length=35), nullable=True),
    sa.Column('zipcode', sa.String(length=20), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('fax', sa.String(length=20), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('phone_type', sa.String(length=7), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('territory_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('LookupTerritoriesofOperation', sa.Column('country_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'LookupTerritoriesofOperation', 'LookupCountriesOfOperations', ['country_id'], ['idx'])
    op.drop_column('LookupTerritoriesofOperation', 'country')
    op.add_column('ClientInfo', sa.Column('territory_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'ClientInfo', 'LookupTerritoriesOfOperations', ['territory_id'], ['idx'])
    op.drop_column('ClientInfo', 'state')
    op.drop_column('ClientInfo', 'country')
    op.drop_constraint('StaffOffices_country_id_fkey', 'StaffOffices', type_='foreignkey')
    op.create_foreign_key(None, 'StaffOffices', 'LookupTerritoriesOfOperations', ['territory_id'], ['idx'])
    op.drop_column('StaffOffices', 'state')
    op.drop_column('StaffOffices', 'country_id')
    op.drop_constraint('StaffOperationalTerritories_operational_territory_id_fkey', 'StaffOperationalTerritories', type_='foreignkey')
    op.create_foreign_key(None, 'StaffOperationalTerritories', 'LookupTerritoriesOfOperations', ['operational_territory_id'], ['idx'])
    op.drop_constraint('TelehealthBookings_client_location_id_fkey', 'TelehealthBookings', type_='foreignkey')
    op.create_foreign_key(None, 'TelehealthBookings', 'LookupTerritoriesOfOperations', ['client_location_id'], ['idx'])
    op.drop_constraint('TelehealthQueueClientPool_location_id_fkey', 'TelehealthQueueClientPool', type_='foreignkey')
    op.create_foreign_key(None, 'TelehealthQueueClientPool', 'LookupTerritoriesOfOperations', ['location_id'], ['idx'])
    op.drop_table('LookupTerritoriesofOperation')
    op.add_column('StaffRoles', sa.Column('granter_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'StaffRoles', 'User', ['granter_id'], ['user_id'])
    op.drop_column('StaffRoles', 'verified')
    op.add_column('UserLogin', sa.Column('password_reset', sa.Boolean(), nullable=True))
    op.create_table('PractitionerCredentials',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('credential_type', sa.String(), nullable=True),
    sa.Column('credentials', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('want_to_practice', sa.Boolean(), nullable=True),
    sa.Column('expiration_date', sa.Date(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], ),
    sa.ForeignKeyConstraint(['role_id'], ['StaffRoles.idx'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('TelehealthBookingStatus',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('booking_id', sa.Integer(), nullable=False),
    sa.Column('reporter_role', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('time', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('reporter_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['booking_id'], ['TelehealthBookings.idx'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reporter_id'], ['User.user_id'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.alter_column('TelehealthBookings', 'target_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.add_column('PractitionerOrganizationAffiliation', sa.Column('affiliate_user_id', sa.String(), nullable=True))
    op.alter_column('User', 'email',
            existing_type=sa.VARCHAR(length=50),
            type_=sa.String(length=75),
            existing_nullable=True)
    op.create_table('UserResetPasswordRequestHistory',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('requested_at', sa.DateTime(), nullable=True),
    sa.Column('email', sa.String(length=75), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ua_string', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('PaymentFailedTransactions',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('transaction_id', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('PaymentMethods', sa.Column('expiration', sa.String(), nullable=True))
    op.add_column('TelehealthBookings', sa.Column('is_paid', sa.Boolean(), nullable=True))
    op.drop_column('ClientInfo', 'dob')
    op.add_column('User', sa.Column('dob', sa.Date(), nullable=True))
    op.add_column('TelehealthBookings', sa.Column('external_booking_id', sa.String(length=36), nullable=True))
    op.create_table('DoseSpotProxyID',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ds_proxy_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('DoseSpotPatientID',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ds_user_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('DoseSpotPractitionerID',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ds_user_id', sa.Integer(), nullable=True),
    sa.Column('ds_enrollment_status', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('DoseSpotPractitionerID')
    op.drop_table('DoseSpotPatientID')
    op.drop_table('DoseSpotProxyID')
    op.drop_column('TelehealthBookings', 'external_booking_id')
    op.drop_column('User', 'dob')
    op.add_column('ClientInfo', sa.Column('dob', sa.DATE(), autoincrement=False, nullable=True))
    op.drop_column('TelehealthBookings', 'is_paid')
    op.drop_column('PaymentMethods', 'expiration')
    op.drop_table('PaymentFailedTransactions')
    op.drop_table('UserResetPasswordRequestHistory')
    op.drop_column('PractitionerOrganizationAffiliation', 'affiliate_user_id')
    op.alter_column('User', 'email',
            existing_type=sa.String(length=75),
            type_=sa.VARCHAR(length=50),
            existing_nullable=True)
    op.alter_column('TelehealthBookings', 'target_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_table('TelehealthBookingStatus')
    op.drop_table('PractitionerCredentials')
    op.drop_column('UserLogin', 'password_reset')
    op.add_column('StaffRoles', sa.Column('verified', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'StaffRoles', type_='foreignkey')
    op.drop_column('StaffRoles', 'granter_id')
    op.drop_constraint(None, 'TelehealthQueueClientPool', type_='foreignkey')
    op.create_foreign_key('TelehealthQueueClientPool_location_id_fkey', 'TelehealthQueueClientPool', 'LookupTerritoriesofOperation', ['location_id'], ['idx'])
    op.drop_constraint(None, 'TelehealthBookings', type_='foreignkey')
    op.create_foreign_key('TelehealthBookings_client_location_id_fkey', 'TelehealthBookings', 'LookupTerritoriesofOperation', ['client_location_id'], ['idx'])
    op.drop_constraint(None, 'StaffOperationalTerritories', type_='foreignkey')
    op.create_foreign_key('StaffOperationalTerritories_operational_territory_id_fkey', 'StaffOperationalTerritories', 'LookupTerritoriesofOperation', ['operational_territory_id'], ['idx'])
    op.add_column('StaffOffices', sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('StaffOffices', sa.Column('state', sa.VARCHAR(length=35), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'StaffOffices', type_='foreignkey')
    op.create_foreign_key('StaffOffices_country_id_fkey', 'StaffOffices', 'LookupCountriesOfOperations', ['country_id'], ['idx'])
    op.drop_column('StaffOffices', 'territory_id')
    op.add_column('ClientInfo', sa.Column('country', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.add_column('ClientInfo', sa.Column('state', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ClientInfo', type_='foreignkey')
    op.drop_column('ClientInfo', 'territory_id')
    op.create_table('LookupTerritoriesofOperation',
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"LookupTerritoriesofOperation_idx_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('sub_territory', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sub_territory_abbreviation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], name='LookupTerritoriesofOperation_country_id_fkey'),
    sa.PrimaryKeyConstraint('idx', name='LookupTerritoriesofOperation_pkey')
    )
    op.add_column('LookupTerritoriesofOperation', sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'LookupTerritoriesofOperation', type_='foreignkey')
    op.drop_column('LookupTerritoriesofOperation', 'country_id')
    op.drop_table('StaffOffices')
    op.drop_table('LookupTerritoriesOfOperations')
    op.drop_table('PaymentRefunds')
    op.drop_table('PaymentHistory')
    op.drop_column('LookupClinicalCareTeamResources', 'access_group')
    op.drop_column('LookupClinicalCareTeamResources', 'resource_group')
    op.drop_constraint(None, 'ClientClinicalCareTeam', type_='unique')
    op.add_column('ClientClinicalCareTeam', sa.Column('team_member_email', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('MedicalSurgeries', sa.Column('reporter_user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'MedicalSurgeries', type_='foreignkey')
    op.create_foreign_key('MedicalSurgeries_reporter_user_id_fkey', 'MedicalSurgeries', 'User', ['reporter_user_id'], ['user_id'])
    op.drop_column('MedicalSurgeries', 'reporter_id')
    op.drop_constraint(None, 'MedicalPhysicalExam', type_='foreignkey')
    op.drop_column('MedicalLookUpSTD', 'updated_at')
    op.drop_column('MedicalLookUpSTD', 'created_at')
    op.drop_column('MedicalLookUpBloodPressureRange', 'updated_at')
    op.drop_column('MedicalLookUpBloodPressureRange', 'created_at')
    op.drop_constraint(None, 'MedicalImaging', type_='foreignkey')
    op.drop_constraint(None, 'MedicalGeneralInfoMedications', type_='foreignkey')
    op.drop_column('MedicalGeneralInfoMedications', 'reporter_id')
    op.drop_column('MedicalConditions', 'updated_at')
    op.drop_column('MedicalConditions', 'created_at')
    op.drop_constraint(None, 'MedicalBloodTests', type_='foreignkey')
    op.drop_table('PractitionerOrganizationAffiliation')
    op.drop_constraint(None, 'StaffRoles', type_='foreignkey')
    op.drop_constraint(None, 'LookupRoles', type_='unique')
    op.drop_table('PaymentStatus')
    op.drop_constraint(None, 'TelehealthQueueClientPool', type_='foreignkey')
    op.drop_constraint(None, 'TelehealthQueueClientPool', type_='foreignkey')
    op.drop_column('TelehealthQueueClientPool', 'payment_method_id')
    op.drop_column('TelehealthQueueClientPool', 'location_id')
    op.drop_constraint(None, 'TelehealthBookings', type_='foreignkey')
    op.drop_constraint(None, 'TelehealthBookings', type_='foreignkey')
    op.drop_column('TelehealthBookings', 'payment_method_id')
    op.drop_column('TelehealthBookings', 'client_location_id')
    op.drop_table('PaymentMethods')
    op.drop_constraint(None, 'TelehealthStaffAvailability', type_='foreignkey')
    op.create_foreign_key('TelehealthStaffAvailability_user_id_fkey', 'TelehealthStaffAvailability', 'User', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.drop_column('TelehealthStaffAvailability', 'updated_at')
    op.drop_column('TelehealthBookings', 'updated_at')
    op.drop_table('TelehealthStaffSettings')
    op.add_column('SystemTelehealthSessionCosts', sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'SystemTelehealthSessionCosts', type_='foreignkey')
    op.drop_constraint('telehealth_costs_unique_resource_currency_id_profession', 'SystemTelehealthSessionCosts', type_='unique')
    op.create_unique_constraint('telehealth_costs_unique_resource_country_profession', 'SystemTelehealthSessionCosts', ['country', 'profession_type'])
    op.drop_column('SystemTelehealthSessionCosts', 'currency_id')
    op.drop_table('LookupCurrencies')
    op.drop_table('LookupOrganizations')
    op.drop_column('TelehealthBookings', 'staff_timezone')
    op.drop_column('TelehealthBookings', 'client_timezone')
    op.drop_constraint('lookup_booking_time_inc_utc_end_fk', 'TelehealthBookings', type_='foreignkey')
    op.drop_constraint('lookup_booking_time_inc_utc_start_fk', 'TelehealthBookings', type_='foreignkey')
    op.drop_column('TelehealthBookings', 'booking_window_id_end_time_utc')
    op.drop_column('TelehealthBookings', 'booking_window_id_start_time_utc')
    op.drop_column('TelehealthBookings', 'target_date_utc')
    op.drop_table('LookupMedicalSymptoms')
    op.drop_table('UserProfilePictures')
    op.add_column('StaffProfile', sa.Column('profile_picture', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('StaffProfile', sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"StaffProfile_idx_seq"\'::regclass)'), autoincrement=True, nullable=False))
    op.add_column('ClientInfo', sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"ClientInfo_idx_seq"\'::regclass)'), autoincrement=True, nullable=False))
    op.drop_column('ClientClinicalCareTeamAuthorizations', 'status')
    op.drop_table('UserLegalDocs')
    op.drop_table('LookupLegalDocs')
    op.drop_constraint(None, 'MedicalBloodPressures', type_='foreignkey')
    op.drop_column('MedicalBloodPressures', 'reporter_id')
    op.drop_column('NotificationsPushRegistration', 'voip_arn')
    op.drop_column('NotificationsPushRegistration', 'device_voip_token')
    op.drop_table('LookupMacroGoals')
    op.drop_constraint(None, 'ClientInfo', type_='foreignkey')
    op.drop_column('ClientInfo', 'primary_macro_goal_id')
    op.drop_column('ClientInfo', 'primary_goal_description')
    op.drop_column('ClientClinicalCareTeam', 'is_temporary')
    op.add_column('ClientInfo', sa.Column('race_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('ClientInfo_race_id_fkey', 'ClientInfo', 'LookupRaces', ['race_id'], ['race_id'])
    op.drop_table('ClientRaceAndEthnicity')
    op.create_table('LookupProfessionColors',
    sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"LookupProfessionColors_idx_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('profession_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('icon', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('idx', name='LookupProfessionColors_pkey')
    )
    op.drop_table('LookupRoles')
    op.drop_column('StaffProfile', 'profile_picture')
    op.add_column('TelehealthBookingDetails', sa.Column('media', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'TelehealthBookingDetails', type_='foreignkey')
    op.drop_constraint(None, 'TelehealthBookingDetails', type_='unique')
    op.drop_column('ClientInfo', 'waist_size')
    op.drop_table('ClientWaistSizeHistory')
    # ### end Alembic commands ###
