variables:
  GIT_DEPTH: 0

stages:
  - test
  - build
  - version
  - deploy

test:
  stage: test
  tags:
    - shared
  #only:
  #  - merge_requests
  script:
    - echo "Creating test database..."
    - sudo docker run --name postgres_$CI_BUILD_ID --network modobio -e POSTGRES_USER=postgres -e POSTGRES_PASSWORD=password -e POSTGRES_DB=modobio_test -p 5432:5432 -d postgres
    - echo "Running tests..."
    - sudo docker build -f Dockerfile.test -t odyssey_test_$CI_BUILD_ID .
    - sudo docker run --name odyssey_test_$CI_BUILD_ID --network modobio -e FLASK_ENV=development -e FLASK_DEV=remote -e DB_USER=postgres -e DB_PASS=password -e DB_HOST=postgres_$CI_BUILD_ID -e DB_NAME=modobio_test -e DOCS_BUCKET_NAME=signeddocumentstest -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -e PYTHONPATH=/usr/src/app/src --rm odyssey_test_$CI_BUILD_ID
  after_script:
    - echo "Destroying test database..."
    - sudo docker rm -f postgres_$CI_BUILD_ID

pages:
  stage: build
  tags:
    - gitlab-runner
  only:
    - master
  script:
    - echo 'Nothing to do...'
  artifacts:
    paths:
      - public

version:
  stage: version
  tags:
    - shared
  only:
    - master
  script:
    - echo "Checking version"
    - bash ~/update_version.sh zan/odyssey

deploy:
  stage: deploy
  tags:
    - shared
  only:
    - master
  script:
    - echo "Deploying update."
    - bash ~/dev_update.sh odyssey