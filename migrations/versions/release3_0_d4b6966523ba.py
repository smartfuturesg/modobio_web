"""release_3
- Add MedicalLookUpBloodPressureRange table
- Add MedicalBloodPressures table
- Add LookupActivityTrackers table
- Add internal flag to User table
- Add LookupClinicalCareTeamResources
- Add ClientClinicalCareTeamAuthorizations
- Add fitbit table
- Change string length limit for tokens
- Add Apple Watch

Revision ID: d4b6966523ba
Revises: 2aaaf9e33e1a
Create Date: 2020-12-24 19:43:12.293829

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.sql.schema import Column


# revision identifiers, used by Alembic.
revision = 'd4b6966523ba'
down_revision = '2aaaf9e33e1a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('MedicalLookUpBloodPressureRange',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('systolic', sa.String(), nullable=True),
    sa.Column('and_or', sa.String(), nullable=True),
    sa.Column('diastolic', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('MedicalBloodPressures',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('datetime_taken', sa.String(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('systolic', sa.Float(), nullable=True),
    sa.Column('diastolic', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_table('LookupActivityTrackers',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('brand', sa.String(), nullable=True),
    sa.Column('series', sa.String(), nullable=True),
    sa.Column('model', sa.String(), nullable=True),
    sa.Column('ecg_metric_1', sa.Boolean(), nullable=True),
    sa.Column('ecg_metric_2', sa.Boolean(), nullable=True),
    sa.Column('sp_o2_spot_check', sa.Boolean(), nullable=True),
    sa.Column('sp_o2_nighttime_avg', sa.Boolean(), nullable=True),
    sa.Column('sleep_total', sa.Boolean(), nullable=True),
    sa.Column('deep_sleep', sa.Boolean(), nullable=True),
    sa.Column('rem_sleep', sa.Boolean(), nullable=True),
    sa.Column('quality_sleep', sa.Boolean(), nullable=True),
    sa.Column('light_sleep', sa.Boolean(), nullable=True),
    sa.Column('awake', sa.Boolean(), nullable=True),
    sa.Column('sleep_latency', sa.Boolean(), nullable=True),
    sa.Column('bedtime_consistency', sa.Boolean(), nullable=True),
    sa.Column('wake_consistency', sa.Boolean(), nullable=True),
    sa.Column('rhr_avg', sa.Boolean(), nullable=True),
    sa.Column('rhr_lowest', sa.Boolean(), nullable=True),
    sa.Column('hr_walking', sa.Boolean(), nullable=True),
    sa.Column('hr_24hr_avg', sa.Boolean(), nullable=True),
    sa.Column('hrv_avg', sa.Boolean(), nullable=True),
    sa.Column('hrv_highest', sa.Boolean(), nullable=True),
    sa.Column('respiratory_rate', sa.Boolean(), nullable=True),
    sa.Column('body_temperature', sa.Boolean(), nullable=True),
    sa.Column('steps', sa.Boolean(), nullable=True),
    sa.Column('total_calories', sa.Boolean(), nullable=True),
    sa.Column('active_calories', sa.Boolean(), nullable=True),
    sa.Column('walking_equivalency', sa.Boolean(), nullable=True),
    sa.Column('inactivity', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('User', sa.Column('is_internal', sa.Boolean(), nullable=False))
    op.create_table('LookupClinicalCareTeamResources',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('resource_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('resource_name', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('resource_id')
    )
    op.create_table('ClientClinicalCareTeamAuthorizations',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('team_member_user_id', sa.Integer(), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['resource_id'], ['LookupClinicalCareTeamResources.resource_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['team_member_user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.create_unique_constraint('care_team_auth_unique_resource_user_team_member_ids', 
                                'ClientClinicalCareTeamAuthorizations', 
                                ['user_id', 'team_member_user_id', 'resource_id'])
    op.create_table('WearablesFitbit',
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('oauth_state', sa.String(length=50), nullable=True),
    sa.Column('access_token', sa.String(length=50), nullable=True),
    sa.Column('refresh_token', sa.String(length=50), nullable=True),
    sa.Column('token_expires', sa.DateTime(), nullable=True),
    sa.Column('last_scrape', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('Wearables', sa.Column('has_fitbit', sa.Boolean(), nullable=True))
    op.add_column('Wearables', sa.Column('registered_fitbit', sa.Boolean(), nullable=True))
    op.alter_column('Wearables', 'has_fitbit',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('Wearables', 'registered_fitbit',
               existing_type=sa.BOOLEAN(),
               nullable=False)
    op.alter_column('WearablesFitbit', 'access_token',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.alter_column('WearablesFitbit', 'refresh_token',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.alter_column('WearablesFitbit', 'oauth_state',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.alter_column('WearablesOura', 'access_token',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.alter_column('WearablesOura', 'refresh_token',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.alter_column('WearablesOura', 'oauth_state',
               existing_type=sa.String(50),
               type_=sa.String(512))
    op.add_column('Wearables', sa.Column(
        'has_applewatch',
        sa.Boolean(),
        server_default='f',
        nullable=True
    ))
    op.add_column('Wearables', sa.Column(
        'registered_applewatch',
        sa.Boolean(),
        server_default='f',
        nullable=True
    ))
    op.alter_column('Wearables', 'has_applewatch',
        existing_type=sa.BOOLEAN(),
        nullable=False
    )
    op.alter_column('Wearables', 'registered_applewatch',
        existing_type=sa.BOOLEAN(),
        nullable=False
    )
    op.alter_column('Wearables', 'has_oura',
        existing_type=sa.BOOLEAN(),
        server_default='f'
    )
    op.alter_column('Wearables', 'registered_oura',
        existing_type=sa.BOOLEAN(),
        server_default='f'
    )
    op.alter_column('Wearables', 'has_fitbit',
        existing_type=sa.BOOLEAN(),
        server_default='f'
    )
    op.alter_column('Wearables', 'registered_fitbit',
        existing_type=sa.BOOLEAN(),
        server_default='f'
    )
    op.alter_column('Wearables', 'has_freestyle',
        existing_type=sa.BOOLEAN(),
        server_default='f'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('Wearables', 'registered_applewatch')
    op.drop_column('Wearables', 'has_applewatch')
    op.alter_column('Wearables', 'has_oura',
        existing_type=sa.BOOLEAN(),
        server_default=None
    )
    op.alter_column('Wearables', 'registered_oura',
        existing_type=sa.BOOLEAN(),
        server_default=None
    )
    op.alter_column('Wearables', 'has_fitbit',
        existing_type=sa.BOOLEAN(),
        server_default=None
    )
    op.alter_column('Wearables', 'registered_fitbit',
        existing_type=sa.BOOLEAN(),
        server_default=None
    )
    op.alter_column('Wearables', 'has_freestyle',
        existing_type=sa.BOOLEAN(),
        server_default=None
    )
    op.alter_column('WearablesFitbit', 'access_token',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.alter_column('WearablesFitbit', 'refresh_token',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.alter_column('WearablesFitbit', 'oauth_state',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.alter_column('WearablesOura', 'access_token',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.alter_column('WearablesOura', 'refresh_token',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.alter_column('WearablesOura', 'oauth_state',
               existing_type=sa.String(512),
               type_=sa.String(50))
    op.drop_table('WearablesFitbit')
    op.drop_column('Wearables', 'registered_fitbit')
    op.drop_column('Wearables', 'has_fitbit')
    op.drop_table('ClientClinicalCareTeamAuthorizations')
    op.drop_table('LookupClinicalCareTeamResources')
    op.drop_column('User', 'is_internal')
    op.drop_table('LookupActivityTrackers')
    op.drop_table('MedicalBloodPressures')
    op.drop_table('MedicalLookUpBloodPressureRange')
    # ### end Alembic commands ###
