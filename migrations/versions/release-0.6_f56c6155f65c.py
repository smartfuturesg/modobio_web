"""release_6
- Add ClientPushNotifications
- Add LookupTermsAndConditions
- Add UserPendingEmailVerifications
- Edit SystemTelehealthSessionCosts
- Add 'email_verified' field to User
- Add StaffCalendarEvents

Revision ID: f56c6155f65c
Revises: c4c5c968b777
Create Date: 2021-03-22 08:22:14.511241

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f56c6155f65c"
down_revision = "c4c5c968b777"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ClientPushNotifications",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("notification_type_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["notification_type_id"],
            ["LookupNotifications.notification_type_id"],
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "LookupTermsAndConditions",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("terms_and_conditions", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.create_table(
        "UserPendingEmailVerifications",
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("code", sa.String(length=4), nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    op.alter_column(
        "SystemTelehealthSessionCosts",
        "country",
        existing_type=sa.VARCHAR(),
        nullable=False,
    )
    op.create_unique_constraint(
        "telehealth_costs_unique_resource_country_profession",
        "SystemTelehealthSessionCosts",
        ["country", "profession_type"],
    )
    op.drop_constraint(
        "SystemTelehealthSessionCosts_country_profession_type_key",
        "SystemTelehealthSessionCosts",
        type_="unique",
    )
    op.add_column("User", sa.Column("email_verified", sa.Boolean(), nullable=False))
    op.create_table(
        "StaffCalendarEvents",
        sa.Column("idx", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("clock_timestamp()"),
            nullable=True,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=False),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.Column("start_time", sa.Time(), nullable=False),
        sa.Column("end_time", sa.Time(), nullable=False),
        sa.Column("timezone", sa.String(), nullable=True),
        sa.Column("duration", sa.Interval(), nullable=True),
        sa.Column("all_day", sa.Boolean(), nullable=False),
        sa.Column("recurring", sa.Boolean(), nullable=False),
        sa.Column("recurrence_type", sa.String(), nullable=True),
        sa.Column("location", sa.String(length=100), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("availability_status", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["User.user_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("idx"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("StaffCalendarEvents")
    op.drop_column("User", "email_verified")
    op.create_unique_constraint(
        "SystemTelehealthSessionCosts_country_profession_type_key",
        "SystemTelehealthSessionCosts",
        ["country", "profession_type"],
    )
    op.drop_constraint(
        "telehealth_costs_unique_resource_country_profession",
        "SystemTelehealthSessionCosts",
        type_="unique",
    )
    op.alter_column(
        "SystemTelehealthSessionCosts",
        "country",
        existing_type=sa.VARCHAR(),
        nullable=True,
    )
    op.drop_table("UserPendingEmailVerifications")
    op.drop_table("LookupTermsAndConditions")
    op.drop_table("ClientPushNotifications")
    # ### end Alembic commands ###
