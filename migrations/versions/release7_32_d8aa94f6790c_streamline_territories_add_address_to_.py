"""Streamline territories, add address to ClientInfo

Revision ID: d8aa94f6790c
Revises: 1ab60df860cc
Create Date: 2021-08-11 12:46:56.827922

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'd8aa94f6790c'
down_revision = '1ab60df860cc'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('LookupTerritoriesOfOperations',
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('clock_timestamp()'), nullable=True),
    sa.Column('idx', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.Column('sub_territory', sa.String(), nullable=True),
    sa.Column('sub_territory_abbreviation', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], ),
    sa.PrimaryKeyConstraint('idx')
    )
    op.add_column('ClientInfo', sa.Column('street', sa.String(length=70), nullable=True))
    op.add_column('ClientInfo', sa.Column('city', sa.String(length=35), nullable=True))
    op.add_column('ClientInfo', sa.Column('territory_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'ClientInfo', 'LookupTerritoriesOfOperations', ['territory_id'], ['idx'])
    op.drop_column('ClientInfo', 'state')
    op.drop_column('ClientInfo', 'country')
    op.add_column('StaffOffices', sa.Column('territory_id', sa.Integer(), nullable=True))
    op.drop_constraint('StaffOffices_country_id_fkey', 'StaffOffices', type_='foreignkey')
    op.create_foreign_key(None, 'StaffOffices', 'LookupTerritoriesOfOperations', ['territory_id'], ['idx'])
    op.drop_column('StaffOffices', 'state')
    op.drop_column('StaffOffices', 'country_id')
    op.drop_constraint('StaffOperationalTerritories_operational_territory_id_fkey', 'StaffOperationalTerritories', type_='foreignkey')
    op.create_foreign_key(None, 'StaffOperationalTerritories', 'LookupTerritoriesOfOperations', ['operational_territory_id'], ['idx'])
    op.drop_constraint('TelehealthBookings_client_location_id_fkey', 'TelehealthBookings', type_='foreignkey')
    op.create_foreign_key(None, 'TelehealthBookings', 'LookupTerritoriesOfOperations', ['client_location_id'], ['idx'])
    op.drop_constraint('TelehealthQueueClientPool_location_id_fkey', 'TelehealthQueueClientPool', type_='foreignkey')
    op.create_foreign_key(None, 'TelehealthQueueClientPool', 'LookupTerritoriesOfOperations', ['location_id'], ['idx'])
    op.drop_table('LookupTerritoriesofOperation')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'TelehealthQueueClientPool', type_='foreignkey')
    op.create_foreign_key('TelehealthQueueClientPool_location_id_fkey', 'TelehealthQueueClientPool', 'LookupTerritoriesofOperation', ['location_id'], ['idx'])
    op.drop_constraint(None, 'TelehealthBookings', type_='foreignkey')
    op.create_foreign_key('TelehealthBookings_client_location_id_fkey', 'TelehealthBookings', 'LookupTerritoriesofOperation', ['client_location_id'], ['idx'])
    op.drop_constraint(None, 'StaffOperationalTerritories', type_='foreignkey')
    op.create_foreign_key('StaffOperationalTerritories_operational_territory_id_fkey', 'StaffOperationalTerritories', 'LookupTerritoriesofOperation', ['operational_territory_id'], ['idx'])
    op.add_column('StaffOffices', sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('StaffOffices', sa.Column('state', sa.VARCHAR(length=35), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'StaffOffices', type_='foreignkey')
    op.create_foreign_key('StaffOffices_country_id_fkey', 'StaffOffices', 'LookupCountriesOfOperations', ['country_id'], ['idx'])
    op.drop_column('StaffOffices', 'territory_id')
    op.add_column('ClientInfo', sa.Column('country', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.add_column('ClientInfo', sa.Column('state', sa.VARCHAR(length=2), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'ClientInfo', type_='foreignkey')
    op.drop_column('ClientInfo', 'territory_id')
    op.drop_column('ClientInfo', 'city')
    op.drop_column('ClientInfo', 'street')
    op.create_table('LookupTerritoriesofOperation',
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('clock_timestamp()'), autoincrement=False, nullable=True),
    sa.Column('idx', sa.INTEGER(), server_default=sa.text('nextval(\'"LookupTerritoriesofOperation_idx_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('sub_territory', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sub_territory_abbreviation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['LookupCountriesOfOperations.idx'], name='LookupTerritoriesofOperation_country_id_fkey'),
    sa.PrimaryKeyConstraint('idx', name='LookupTerritoriesofOperation_pkey')
    )
    op.drop_table('LookupTerritoriesOfOperations')
    # ### end Alembic commands ###
